// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MyBlockChain.Persistence.Repositories;

namespace MyBlockChain.Migrations.TransactionsPool
{
    [DbContext(typeof(TransactionsPoolContext))]
    [Migration("20210610205522_Anitial")]
    partial class Anitial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.7")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("MyBlockChain.Persistence.Dtos.TransactionWithFeeDocument", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Spend")
                        .HasColumnType("bit");

                    b.Property<int>("TotalFee")
                        .HasColumnType("int");

                    b.Property<int?>("TransactionId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TransactionId");

                    b.ToTable("TransactionsUtxo");
                });

            modelBuilder.Entity("MyBlockChain.Transactions.InputDocument", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Signature")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TransactionDocumentId")
                        .HasColumnType("int");

                    b.Property<string>("TransactionHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TransactionOutputPosition")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TransactionDocumentId");

                    b.ToTable("Inputs");
                });

            modelBuilder.Entity("MyBlockChain.Transactions.OutputDocument", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Amount")
                        .HasColumnType("int");

                    b.Property<string>("Receiver")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("State")
                        .HasColumnType("int");

                    b.Property<int?>("TransactionDocumentId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TransactionDocumentId");

                    b.ToTable("Outputs");
                });

            modelBuilder.Entity("MyBlockChain.Transactions.TransactionDocument", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("NumberOfTransactionsInput")
                        .HasColumnType("int");

                    b.Property<int>("NumberOfTransactionsOutputs")
                        .HasColumnType("int");

                    b.Property<string>("TransactionId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Transactions");
                });

            modelBuilder.Entity("MyBlockChain.Persistence.Dtos.TransactionWithFeeDocument", b =>
                {
                    b.HasOne("MyBlockChain.Transactions.TransactionDocument", "Transaction")
                        .WithMany()
                        .HasForeignKey("TransactionId");

                    b.Navigation("Transaction");
                });

            modelBuilder.Entity("MyBlockChain.Transactions.InputDocument", b =>
                {
                    b.HasOne("MyBlockChain.Transactions.TransactionDocument", "TransactionDocument")
                        .WithMany("Inputs")
                        .HasForeignKey("TransactionDocumentId");

                    b.Navigation("TransactionDocument");
                });

            modelBuilder.Entity("MyBlockChain.Transactions.OutputDocument", b =>
                {
                    b.HasOne("MyBlockChain.Transactions.TransactionDocument", "TransactionDocument")
                        .WithMany("Outputs")
                        .HasForeignKey("TransactionDocumentId");

                    b.Navigation("TransactionDocument");
                });

            modelBuilder.Entity("MyBlockChain.Transactions.TransactionDocument", b =>
                {
                    b.Navigation("Inputs");

                    b.Navigation("Outputs");
                });
#pragma warning restore 612, 618
        }
    }
}
